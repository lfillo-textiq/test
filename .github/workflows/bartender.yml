name: Bartender
on:
  workflow_dispatch:
    inputs:
      bartender_command:
        description: 'Bartender CLI command'
        required: true
        default: '-v'
      release_manager:
        description: 'Id of slack user which triggered this workflow'
        required: true
        default: 'U020CNBGDQA'
      dryrun_relfile_id:
        description: 'Id of dry run release file uploaded to slack'
        required: false
        
jobs:
  upload-workflow-inputs:
    runs-on: ubuntu-latest
    steps:
      - name: Store inputs in file
        env:
          WORKFLOW_INPUTS: ${{ toJSON(github.event.inputs) }}
        run: echo "$WORKFLOW_INPUTS" > /tmp/inputs.json
      - name: Upload inputs artifact
        uses: actions/upload-artifact@v2
        with:
          name: workflow-inputs
          path: /tmp/inputs.json
  run-bartender-command:
    runs-on: ubuntu-latest
    steps:   
      - uses: actions/checkout@v2
      - name: Add secrets.config
        run: sudo touch /usr/local/etc/secrets.config
      - name: Make user own secrets.config
        run: sudo chown $USER /usr/local/etc/secrets.config
      - name: Add secrets to config for integration tests
        run: |
          echo "BUILD_AWS_SECRET_ACCESS_KEY=${{ secrets.BUILD_AWS_SECRET_ACCESS_KEY }}" >> /usr/local/etc/secrets.config
          echo "UAT_AWS_SECRET_ACCESS_KEY=${{ secrets.UAT_AWS_SECRET_ACCESS_KEY }}" >> /usr/local/etc/secrets.config
          echo "PROD_AWS_SECRET_ACCESS_KEY=${{ secrets.PROD_AWS_SECRET_ACCESS_KEY }}" >> /usr/local/etc/secrets.config
          echo "GITHUB_PAT=${{ secrets.BARTENDER_PAT }}" >> /usr/local/etc/secrets.config
      - name: Install PyGithub
        run: sudo pip3 install PyGithub==1.55
      - name: Install latest bartender binary
        run: sudo bash ./scripts/install_latest_bartender.sh
      - name: Execute bartender command
        run: yes y | ${{ github.event.inputs.bartender_command }} -d
      - name: unzip bartender binary [REMOVE ME]
        run: unzip bartender.zip
      - name: Execute bartender command [REMOVE ./]
        run: |
          set -o pipefail
          ./${{ github.event.inputs.bartender_command }} -d -s 2>&1 | tee /tmp/outputs.txt
      - name: Get last line of outputs.txt (release process output object, all other lines are logs)
        if: ${{ success() | failiure() }}
        run: echo $(tail -1 /tmp/outputs.txt) > /tmp/outputs.json
      - name: Upload bartender outputs file
        if: ${{ success() | failiure() }}
        uses: actions/upload-artifact@v2
        with:
          name: bartender-command-outputs
          path: /tmp/outputs.json
